! F.F. Van der Veken
! Error generation for the new D2 correctors (MCBRD)
! T. Pugnat Sep 2022
! Change routine such that orientation is given by tables instead of hardcoded
!
! The layout for v1.4 is:
! B2 <-  (=MCBRDV.L.B2 MCBRDH.L.B2= D2=)  IP  (=D2 =MCBRDH.R.B1 MCBRDV.R.B1=)  -> B1
! B1 ->  (=MCBRDH.L.B1 MCBRDV.L.B1= D2=)  IP  (=D2 =MCBRDV.R.B2 MCBRDH.R.B2=)  <- B2
! So the apertures are:
! MCBRDH.L: iap=2
! MCBRDH.R: iap=1
! MCBRDV.L: iap=1
! MCBRDV.R: iap=2
!
! The layout for v1.5 is (changes on right side of IP):
! B2 <-  (=MCBRDV.L.B2 MCBRDH.L.B2= D2=)  IP  (=D2 =MCBRDV.R.B1 MCBRDH.R.B1=)  -> B1
! B1 ->  (=MCBRDH.L.B1 MCBRDV.L.B1= D2=)  IP  (=D2 =MCBRDH.R.B2 MCBRDV.R.B2=)  <- B2
! So the apertures are:
! MCBRDH.L: iap=2
! MCBRDH.R: iap=2
! MCBRDV.L: iap=1
! MCBRDV.R: iap=1

if (ver_hllhc_optics<>1.4 && ver_hllhc_optics<>1.5){
    print,text="Error routine for MCBRD only supported for HL optics 1.4 or 1.5. Aborting...";
    stop;
};


abs_or_rel:=1; order:=0;


! -----------------------------------------------------------------------
! *********************** Magnet type : MCBRDH ************************
! -----------------------------------------------------------------------
exec new_magnetfamily_MB(MCBRDH);                 ! systematic error
klRef_MCBRDH_abs = BRef_MCBRDH*l.MCBRDH*CLIGHT/(1E9*NRJ);

!MCBRDH.L1
if(mylhcbeam==1){ klRef_MCBRDH = sign_MCBRDH.4L1.B1*klRef_MCBRDH_abs; };
if(mylhcbeam >1){ klRef_MCBRDH = sign_MCBRDH.4L1.B2*klRef_MCBRDH_abs; };
if (print_errors==1){print, text="Errors for MCBRDH.4L1.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBRDH\.4L1.*\.\.r$";
exec Efcomp_Random_Multi(MCBRDH, MCBRDH.4L1, abs_or_rel, order);

!MCBRDH.R1
if(mylhcbeam==1){ klRef_MCBRDH = sign_MCBRDH.4R1.B1*klRef_MCBRDH_abs; };
if(mylhcbeam >1){ klRef_MCBRDH = sign_MCBRDH.4R1.B2*klRef_MCBRDH_abs; };
if (print_errors==1){print, text="Errors for MCBRDH.4R1.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBRDH\.4R1.*\.\.r$";
exec Efcomp_Random_Multi(MCBRDH, MCBRDH.4R1, abs_or_rel, order);

!MCBRDH.L5
if(mylhcbeam==1){ klRef_MCBRDH = sign_MCBRDH.4L5.B1*klRef_MCBRDH_abs; };
if(mylhcbeam >1){ klRef_MCBRDH = sign_MCBRDH.4L5.B2*klRef_MCBRDH_abs; };
if (print_errors==1){print, text="Errors for MCBRDH.4L5.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBRDH\.4L5.*\.\.r$";
exec Efcomp_Random_Multi(MCBRDH, MCBRDH.4L5, abs_or_rel, order);

!MCBRDH.R5
if(mylhcbeam==1){ klRef_MCBRDH = sign_MCBRDH.4R5.B1*klRef_MCBRDH_abs; };
if(mylhcbeam >1){ klRef_MCBRDH = sign_MCBRDH.4R5.B2*klRef_MCBRDH_abs; };
if (print_errors==1){print, text="Errors for MCBRDH.4R5.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBRDH\.4R5.*\.\.r$";
exec Efcomp_Random_Multi(MCBRDH, MCBRDH.4R5, abs_or_rel, order);



! -----------------------------------------------------------------------
! *********************** Magnet type : MCBRDV ************************
! -----------------------------------------------------------------------
exec new_magnetfamily_MB(MCBRDV);                 ! systematic error
klRef_MCBRDV_abs = BRef_MCBRDV*l.MCBRDV*CLIGHT/(1E9*NRJ);

!MCBRDV.L1
if(mylhcbeam==1){ klRef_MCBRDV = sign_MCBRDV.4L1.B1*klRef_MCBRDV_abs; };
if(mylhcbeam >1){ klRef_MCBRDV = sign_MCBRDV.4L1.B2*klRef_MCBRDV_abs; };
if (print_errors==1){print, text="Errors for MCBRDV.4L1.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBRDV\.4L1.*\.\.r$";
exec Efcomp_Random_Multi(MCBRDV, MCBRDV.4L1, abs_or_rel, order);

!MCBRDV.R1
if(mylhcbeam==1){ klRef_MCBRDV = sign_MCBRDV.4R1.B1*klRef_MCBRDV_abs; };
if(mylhcbeam >1){ klRef_MCBRDV = sign_MCBRDV.4R1.B2*klRef_MCBRDV_abs; };
if (print_errors==1){print, text="Errors for MCBRDV.4R1.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBRDV\.4R1.*\.\.r$";
exec Efcomp_Random_Multi(MCBRDV, MCBRDV.4R1, abs_or_rel, order);

!MCBRDV.L5
if(mylhcbeam==1){ klRef_MCBRDV = sign_MCBRDV.4L5.B1*klRef_MCBRDV_abs; };
if(mylhcbeam >1){ klRef_MCBRDV = sign_MCBRDV.4L5.B2*klRef_MCBRDV_abs; };
if (print_errors==1){print, text="Errors for MCBRDV.4L5.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBRDV\.4L5.*\.\.r$";
exec Efcomp_Random_Multi(MCBRDV, MCBRDV.4L5, abs_or_rel, order);

!MCBRDV.R5
if(mylhcbeam==1){ klRef_MCBRDV = sign_MCBRDV.4R5.B1*klRef_MCBRDV_abs; };
if(mylhcbeam >1){ klRef_MCBRDV = sign_MCBRDV.4R5.B2*klRef_MCBRDV_abs; };
if (print_errors==1){print, text="Errors for MCBRDV.4R5.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBRDV\.4R5.*\.\.r$";
exec Efcomp_Random_Multi(MCBRDV, MCBRDV.4R5, abs_or_rel, order);
    



use_average_errors_MCBRD=0;
return;
