! F.F Van der Veken 2015
! Generation of errors for the corrector magnets in Q2, Q3 and CP.
! T. Pugnat Sep 2022
! Change routine such that orientation is given by tables instead of hardcoded


! Connections for the right side of IP:         IP  (=FBa Q2a=) (=Q2b FBb=) (=Q3=) (=FA ..)     => only FBb needs inversion
! Connections for the left side of IP: inverse of above
! Summarising:
! a2L: 1,  a2R: 0,  b2L: 0,  b2R: 1,  3L: 1,  3R:  0


!Rref_MCBXFAH=Rr_MCBXAB;
!Rref_MCBXFBH=Rr_MCBXAB;
!Rref_MCBXFAV=-Rr_MCBXAB;!skew reference
!Rref_MCBXFBV=-Rr_MCBXAB;!skew reference


abs_or_rel:=1; order:=0;

! -----------------------------------------------------------------------
! *********************** Magnet type : MCBXFAH ************************
! -----------------------------------------------------------------------
exec new_magnetfamily(MCBXFAH);                 ! systematic error
klRef_MCBXFAH_abs = BRef_MCBXFAH*l.MCBXFA*CLIGHT/(1E9*NRJ);

klRef_MCBXFAH = sign_MCBXFAH.3L1*klRef_MCBXFAH_abs;
if (print_errors==1){print, text="Errors for MCBXFAH.3L1.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFAH\.3L1\.\.r$";
exec Efcomp_Random_Multi(MCBXFAH, MCBXFAH.3L1, abs_or_rel, order);

klRef_MCBXFAH = sign_MCBXFAH.3R1*klRef_MCBXFAH_abs;
if (print_errors==1){print, text="Errors for MCBXFAH.3R1.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFAH\.3R1\.\.r$";
exec Efcomp_Random_Multi(MCBXFAH, MCBXFAH.3R1, abs_or_rel, order);

klRef_MCBXFAH = sign_MCBXFAH.3L5*klRef_MCBXFAH_abs;
if (print_errors==1){print, text="Errors for MCBXFAH.3L5.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFAH\.3L5\.\.r$";
exec Efcomp_Random_Multi(MCBXFAH, MCBXFAH.3L5, abs_or_rel, order);

klRef_MCBXFAH = sign_MCBXFAH.3R5*klRef_MCBXFAH_abs;
if (print_errors==1){print, text="Errors for MCBXFAH.3R5.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFAH\.3R5\.\.r$";
exec Efcomp_Random_Multi(MCBXFAH, MCBXFAH.3R5, abs_or_rel, order);

! -----------------------------------------------------------------------
! *********************** Magnet type : MCBXFAV ************************
! -----------------------------------------------------------------------
exec new_magnetfamily(MCBXFAV);                 ! systematic error
klRef_MCBXFAV_abs = BRef_MCBXFAV*l.MCBXFA*CLIGHT/(1E9*NRJ)*bv_aux;       ! Main field gets a sign flip in case of Beam 4  (bv_aux)

klRef_MCBXFAV = sign_MCBXFAV.3L1*klRef_MCBXFAV_abs;
if (print_errors==1){print, text="Errors for MCBXFAV.3L1.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFAV\.3L1\.\.r$";
exec Efcomp_Random_Multi(MCBXFAV, MCBXFAV.3L1, abs_or_rel, order);

klRef_MCBXFAV = sign_MCBXFAV.3R1*klRef_MCBXFAV_abs;
if (print_errors==1){print, text="Errors for MCBXFAV.3R1.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFAV\.3R1\.\.r$";
exec Efcomp_Random_Multi(MCBXFAV, MCBXFAV.3R1, abs_or_rel, order);

klRef_MCBXFAV = sign_MCBXFAV.3L5*klRef_MCBXFAV_abs;
if (print_errors==1){print, text="Errors for MCBXFAV.3L5.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFAV\.3L5\.\.r$";
exec Efcomp_Random_Multi(MCBXFAV, MCBXFAV.3L5, abs_or_rel, order);

klRef_MCBXFAV = sign_MCBXFAV.3R5*klRef_MCBXFAV_abs;
if (print_errors==1){print, text="Errors for MCBXFAV.3R5.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFAV\.3R5\.\.r$";
exec Efcomp_Random_Multi(MCBXFAV, MCBXFAV.3R5, abs_or_rel, order);


! -----------------------------------------------------------------------
! *********************** Magnet type : MCBXFBH ************************
! -----------------------------------------------------------------------
exec new_magnetfamily(MCBXFBH);                 ! systematic error
klRef_MCBXFBH_abs = BRef_MCBXFBH*l.MCBXFB*CLIGHT/(1E9*NRJ);

klRef_MCBXFBH = sign_MCBXFBH.a2L1*klRef_MCBXFBH_abs;
if (print_errors==1){print, text="Errors for MCBXFBH.a2L1.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFBH\.a2L1\.\.r$";
exec Efcomp_Random_Multi(MCBXFBH, MCBXFBH.a2L1, abs_or_rel, order);

klRef_MCBXFBH = sign_MCBXFBH.a2R1*klRef_MCBXFBH_abs;
if (print_errors==1){print, text="Errors for MCBXFBH.a2R1.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFBH\.a2R1\.\.r$";
exec Efcomp_Random_Multi(MCBXFBH, MCBXFBH.a2R1, abs_or_rel, order);

klRef_MCBXFBH = sign_MCBXFBH.a2L5*klRef_MCBXFBH_abs;
if (print_errors==1){print, text="Errors for MCBXFBH.a2L5.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFBH\.a2L5\.\.r$";
exec Efcomp_Random_Multi(MCBXFBH, MCBXFBH.a2L5, abs_or_rel, order);

klRef_MCBXFBH = sign_MCBXFBH.a2R5*klRef_MCBXFBH_abs;
if (print_errors==1){print, text="Errors for MCBXFBH.a2R5.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFBH\.a2R5\.\.r$";
exec Efcomp_Random_Multi(MCBXFBH, MCBXFBH.a2R5, abs_or_rel, order);

klRef_MCBXFBH = sign_MCBXFBH.b2L1*klRef_MCBXFBH_abs;
if (print_errors==1){print, text="Errors for MCBXFBH.b2L1.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFBH\.b2L1\.\.r$";
exec Efcomp_Random_Multi(MCBXFBH, MCBXFBH.b2L1, abs_or_rel, order);

klRef_MCBXFBH = sign_MCBXFBH.b2R1*klRef_MCBXFBH_abs;
if (print_errors==1){print, text="Errors for MCBXFBH.b2R1.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFBH\.b2R1\.\.r$";
exec Efcomp_Random_Multi(MCBXFBH, MCBXFBH.b2R1, abs_or_rel, order);

klRef_MCBXFBH = sign_MCBXFBH.b2L5*klRef_MCBXFBH_abs;
if (print_errors==1){print, text="Errors for MCBXFBH.b2L5.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFBH\.b2L5\.\.r$";
exec Efcomp_Random_Multi(MCBXFBH, MCBXFBH.b2L5, abs_or_rel, order);

klRef_MCBXFBH = sign_MCBXFBH.b2R5*klRef_MCBXFBH_abs;
if (print_errors==1){print, text="Errors for MCBXFBH.b2R5.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFBH\.b2R5\.\.r$";
exec Efcomp_Random_Multi(MCBXFBH, MCBXFBH.b2R5, abs_or_rel, order);


! -----------------------------------------------------------------------
! *********************** Magnet type : MCBXFBV ************************
! -----------------------------------------------------------------------
exec new_magnetfamily(MCBXFBV);                 ! systematic error
klRef_MCBXFBV_abs = BRef_MCBXFBV*l.MCBXFB*CLIGHT/(1E9*NRJ)*bv_aux;       ! Main field gets a sign flip in case of Beam 4  (bv_aux)

klRef_MCBXFBV = sign_MCBXFBV.a2L1*klRef_MCBXFBV_abs;
if (print_errors==1){print, text="Errors for MCBXFBV.a2L1.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFBV\.a2L1\.\.r$";
exec Efcomp_Random_Multi(MCBXFBV, MCBXFBV.a2L1, abs_or_rel, order);

klRef_MCBXFBV = sign_MCBXFBV.a2R1*klRef_MCBXFBV_abs;
if (print_errors==1){print, text="Errors for MCBXFBV.a2R1.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFBV\.a2R1\.\.r$";
exec Efcomp_Random_Multi(MCBXFBV, MCBXFBV.a2R1, abs_or_rel, order);

klRef_MCBXFBV = sign_MCBXFBV.a2L5*klRef_MCBXFBV_abs;
if (print_errors==1){print, text="Errors for MCBXFBV.a2L5.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFBV\.a2L5\.\.r$";
exec Efcomp_Random_Multi(MCBXFBV, MCBXFBV.a2L5, abs_or_rel, order);

klRef_MCBXFBV = sign_MCBXFBV.a2R5*klRef_MCBXFBV_abs;
if (print_errors==1){print, text="Errors for MCBXFBV.a2R5.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFBV\.a2R5\.\.r$";
exec Efcomp_Random_Multi(MCBXFBV, MCBXFBV.a2R5, abs_or_rel, order);

klRef_MCBXFBV = sign_MCBXFBV.b2L1*klRef_MCBXFBV_abs;
if (print_errors==1){print, text="Errors for MCBXFBV.b2L1.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFBV\.b2L1\.\.r$";
exec Efcomp_Random_Multi(MCBXFBV, MCBXFBV.b2L1, abs_or_rel, order);

klRef_MCBXFBV = sign_MCBXFBV.b2R1*klRef_MCBXFBV_abs;
if (print_errors==1){print, text="Errors for MCBXFBV.b2R1.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFBV\.b2R1\.\.r$";
exec Efcomp_Random_Multi(MCBXFBV, MCBXFBV.b2R1, abs_or_rel, order);

klRef_MCBXFBV = sign_MCBXFBV.b2L5*klRef_MCBXFBV_abs;
if (print_errors==1){print, text="Errors for MCBXFBV.b2L5.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFBV\.b2L5\.\.r$";
exec Efcomp_Random_Multi(MCBXFBV, MCBXFBV.b2L5, abs_or_rel, order);

klRef_MCBXFBV = sign_MCBXFBV.b2R5*klRef_MCBXFBV_abs;
if (print_errors==1){print, text="Errors for MCBXFBV.b2R5.*";};
select,flag=error,clear;select,flag=error,pattern="^MCBXFBV\.b2R5\.\.r$";
exec Efcomp_Random_Multi(MCBXFBV, MCBXFBV.b2R5, abs_or_rel, order);

return;
